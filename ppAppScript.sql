-- MySQL Script generated by MySQL Workbench
-- Wed Jul 15 12:45:51 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema PantryPals
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema PantryPals
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `PantryPals` DEFAULT CHARACTER SET utf8 ;
USE `PantryPals` ;

-- -----------------------------------------------------
-- Table `PantryPals`.`acceptedFriends`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`acceptedFriends` (
  `groupId` INT NOT NULL COMMENT 'The group you belong to',
  `request` INT NOT NULL COMMENT 'The request made, should be accepted only',
  `friend` INT NOT NULL COMMENT 'The user now on this list ',
  `acceptedId` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`acceptedId`),
  CONSTRAINT `fk_acceptedFriends_friendGroups1`
    FOREIGN KEY (`groupId`)
    REFERENCES `PantryPals`.`friendGroups` (`groupId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acceptedFriends_friendsRequest1`
    FOREIGN KEY (`request`)
    REFERENCES `PantryPals`.`friendsRequest` (`requestId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acceptedFriends_users1`
    FOREIGN KEY (`friend`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PantryPals`.`allergies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`allergies` (
  `allergyId` INT NOT NULL,
  `food` INT NOT NULL,
  `item` INT NOT NULL,
  `type` VARCHAR(45) NULL,
  `level` VARCHAR(45) NULL,
  PRIMARY KEY (`allergyId`),
  CONSTRAINT `fk_allergies_foods1`
    FOREIGN KEY (`food`)
    REFERENCES `PantryPals`.`foods` (`foodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_allergies_householdGoods1`
    FOREIGN KEY (`item`)
    REFERENCES `PantryPals`.`householdGoods` (`hhgId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `PantryPals`.`brands`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`brands` (
  `brandId` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `food` VARCHAR(5) NULL COMMENT 'Should be true or false',
  `household` VARCHAR(5) NULL COMMENT 'Should be true or false',
  PRIMARY KEY (`brandId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PantryPals`.`dietRestrictions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`dietRestrictions` (
  `restrictionId` INT NOT NULL,
  `diet` INT NOT NULL,
  `food` INT NOT NULL,
  PRIMARY KEY (`restrictionId`),
  CONSTRAINT `fk_dietRestrictions_diets1`
    FOREIGN KEY (`diet`)
    REFERENCES `PantryPals`.`diets` (`dietId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dietRestrictions_foods1`
    FOREIGN KEY (`food`)
    REFERENCES `PantryPals`.`foods` (`foodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `PantryPals`.`diets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`diets` (
  `dietId` INT NOT NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`dietId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PantryPals`.`foods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`foods` (
  `foodId` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`foodId`))
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `PantryPals`.`friendGroups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`friendGroups` (
  `groupId` INT NOT NULL,
  `user` INT NOT NULL COMMENT 'The person who this list belongs to, a user can have more than on friend Group; housemates, work, school etc. ',
  `groupName` VARCHAR(45) NULL,
  PRIMARY KEY (`groupId`),
  CONSTRAINT `fk_friendsLists_users1`
    FOREIGN KEY (`user`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `PantryPals`.`friendsRequest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`friendsRequest` (
  `requestId` INT NOT NULL,
  `user1` INT NOT NULL COMMENT 'The person doing the requesting',
  `user2` INT NOT NULL,
  `status` VARCHAR(45) NULL COMMENT 'Accept or Decline, only if accepted, should be added to Friends List ',
  PRIMARY KEY (`requestId`),
  CONSTRAINT `fk_friendsList_users1`
    FOREIGN KEY (`user1`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_friendsList_users2`
    FOREIGN KEY (`user2`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PantryPals`.`householdGoods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`householdGoods` (
  `hhgId` INT NOT NULL,
  `item` VARCHAR(45) NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`hhgId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PantryPals`.`measurements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`measurements` (
  `measureId` INT NOT NULL,
  `size` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  PRIMARY KEY (`measureId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PantryPals`.`shoppingLists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`shoppingLists` (
  `listId` INT NOT NULL,
  `volumn` INT NULL,
  `measure` INT NOT NULL,
  `food` INT NOT NULL,
  `house` INT NOT NULL,
  `brand` INT NOT NULL,
  `need (Urgent)` VARCHAR(45) NULL,
  `pickedUp` VARCHAR(45) NULL,
  `listCreator` INT NOT NULL,
  PRIMARY KEY (`listId`),
  CONSTRAINT `fk_shoppingLists_measurements1`
    FOREIGN KEY (`measure`)
    REFERENCES `PantryPals`.`measurements` (`measureId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_shoppingLists_foods1`
    FOREIGN KEY (`food`)
    REFERENCES `PantryPals`.`foods` (`foodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_shoppingLists_householdGoods1`
    FOREIGN KEY (`house`)
    REFERENCES `PantryPals`.`householdGoods` (`hhgId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_shoppingLists_brands1`
    FOREIGN KEY (`brand`)
    REFERENCES `PantryPals`.`brands` (`brandId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_shoppingLists_users1`
    FOREIGN KEY (`listCreator`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PantryPals`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`users` (
  `userId` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `userName` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `birthDate` VARCHAR(45) NULL,
  `friendsList_friendListId` INT NOT NULL,
  PRIMARY KEY (`userId`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `PantryPals`.`usersAllergies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`usersAllergies` (
  `entryId` INT NOT NULL,
  `user` INT NOT NULL,
  `allergy` INT NOT NULL,
  PRIMARY KEY (`entryId`),
  CONSTRAINT `fk_usersAllergies_allergies1`
    FOREIGN KEY (`allergy`)
    REFERENCES `PantryPals`.`allergies` (`allergyId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usersAllergies_users1`
    FOREIGN KEY (`user`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `PantryPals`.`usersContactInfo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`usersContactInfo` (
  `contactId` INT NOT NULL,
  `users_userId` INT NOT NULL,
  `email` VARCHAR(45) NULL,
  `cell` VARCHAR(10) NULL,
  PRIMARY KEY (`contactId`),
  CONSTRAINT `fk_usersContact_users1`
    FOREIGN KEY (`users_userId`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PantryPals`.`usersDiets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`usersDiets` (
  `dietEntryId` INT NOT NULL,
  `user` INT NOT NULL,
  `diet` INT NOT NULL,
  PRIMARY KEY (`dietEntryId`),
  CONSTRAINT `fk_usersDiets_users1`
    FOREIGN KEY (`user`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usersDiets_diets1`
    FOREIGN KEY (`diet`)
    REFERENCES `PantryPals`.`diets` (`dietId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `PantryPals`.`usersDislikes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`usersDislikes` (
  `dislikesId` INT NOT NULL,
  `user` INT NOT NULL,
  `food` INT NOT NULL,
  `item` INT NOT NULL,
  PRIMARY KEY (`dislikesId`),
  CONSTRAINT `fk_usersDislikes_users1`
    FOREIGN KEY (`user`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usersDislikes_foods1`
    FOREIGN KEY (`food`)
    REFERENCES `PantryPals`.`foods` (`foodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usersDislikes_householdGoods1`
    FOREIGN KEY (`item`)
    REFERENCES `PantryPals`.`householdGoods` (`hhgId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PantryPals`.`usersLikes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`usersLikes` (
  `likeId` INT NOT NULL,
  `user` INT NOT NULL,
  `food` INT NOT NULL,
  `item` INT NOT NULL,
  PRIMARY KEY (`likeId`),
  CONSTRAINT `fk_UsersLikes_foods1`
    FOREIGN KEY (`food`)
    REFERENCES `PantryPals`.`foods` (`foodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UsersLikes_householdGoods1`
    FOREIGN KEY (`item`)
    REFERENCES `PantryPals`.`householdGoods` (`hhgId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UsersLikes_users1`
    FOREIGN KEY (`user`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `PantryPals`.`usersLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PantryPals`.`usersLocation` (
  `userLocId` INT NOT NULL,
  `user` INT NOT NULL,
  `address` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `state` VARCHAR(5) NULL,
  `zipcode` VARCHAR(10) NULL,
  `country` VARCHAR(45) NULL,
  PRIMARY KEY (`userLocId`),
  CONSTRAINT `fk_usersLocation_users`
    FOREIGN KEY (`user`)
    REFERENCES `PantryPals`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
